---
version: 2.1

docker_auth: &docker_auth
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD

defaults: &defaults
  docker:
    - image: greenpeaceinternational/p4-builder:latest
      auth:
        <<: *docker_auth

job_environments:
  common_environment: &common_environment
    CONTAINER_PREFIX: planet4-defaultcontent
    APP_HOSTPATH: defaultcontent
    WP_DB_NAME_PREFIX: planet4-defaultcontent_wordpress
  develop_environment: &develop_environment
    APP_ENVIRONMENT: development
    APP_HOSTNAME: www-dev.greenpeace.org
    CLOUDSQL_INSTANCE: p4-develop-k8s
    GOOGLE_PROJECT_ID: planet-4-151612
    GCLOUD_CLUSTER: p4-development
    HELM_NAMESPACE: develop
    HELM_RELEASE: planet4-defaultcontent
    NEWRELIC_APPNAME: P4 Defaultcontent Development
    WP_DB_NAME: planet4-defaultcontent_wordpress
    WP_STATELESS_BUCKET: planet4-defaultcontent-stateless-develop

job_definitions:
  build_steps: &build_steps
    working_directory: ~/
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
            - composer-v5-{{ .Branch }}-{{ .Revision }}
            - composer-v5-{{ .Branch }}
            - composer-v5
      - run: |
          if [[ -d source/cache ]]; then ls -al source/cache; fi
      - run: activate-gcloud-account.sh
      - run: mkdir -p /tmp/workspace/var /tmp/workspace/src
      - run: echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num
      - run: make test
      - run: make rewrite
      - run: make checkout
      - run: make rewrite-app-repos
      - run: make copy
      - run: make bake
      - run: make persist
      - run: make build
      - run: make push
      - save_cache:
          key: composer-v5-{{ .Branch }}-{{ .Revision }}-{{ .BuildNum }}
          paths:
            - source/cache
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var
            - src

  test_steps: &test_steps
    working_directory: ~/project
    docker:
      - image: gcr.io/planet-4-151612/p4-codeception:build-12
      - name: selenium
        image: selenium/standalone-chrome-debug:3.141.59-oxygen
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run: if [ ! -d "tests" ] || [ ! "$(ls -A tests)" ]; then circleci-agent step halt; fi
      - run: dockerize -wait tcp://selenium:4444
      - run: codeceptionify.sh .
      - run: codecept run --xml=junit.xml --html
      - run:
          name: Copy test artifacts
          when: always
          command: |
            mkdir -p /tmp/artifacts
            cp -r codeception/_output/. /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts

  deploy_steps: &deploy_steps
    working_directory: ~/
    parameters:
      notify:
        type: boolean
        default: false
      is_prod:
        type: boolean
        default: false
    steps:
      - checkout:
          path: /home/circleci/checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: activate-gcloud-account.sh
      - run: make prepare-helm
      - run: make backup
      - run: BUILD_TAG=build-$(cat /tmp/workspace/var/circle-build-num) make deploy-helm
      - run: make post-deploy
      - run:
          name: Extract workflow from commit message
          command: |
            UNHOLD_WORKFLOW_LINE=$(git --git-dir=/home/circleci/checkout/.git log --format=%B -n 1 "$CIRCLE_SHA1" | { grep '^\/unhold ' || true; } )
            echo "line $UNHOLD_WORKFLOW_LINE"
            if [[ -n $UNHOLD_WORKFLOW_LINE ]]; then
              WORKFLOW_ID=${UNHOLD_WORKFLOW_LINE#"/unhold "}
              echo "$WORKFLOW_ID"
              echo $WORKFLOW_ID > /tmp/workspace/approve_workflow
            fi

jobs:
  build:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *build_steps

  deploy:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    <<: *deploy_steps

  create-default-sql:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    environment:
      APP_HOSTNAME: k8s.p4.greenpeace.org
      APP_HOSTPATH: defaultcontent
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-defaultcontent
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      INFRA_VERSION: develop
      NEWRELIC_APPNAME: Planet4 Default Content Development
      WP_DB_NAME: planet4-defaultcontent_wordpress
      WP_TITLE: Greenpeace Default Content
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure
          command: |
            activate-gcloud-account.sh
      - run: echo $SQLPROXY_KEY | base64 -d > key.json
      - run: SQL_TAG=$CIRCLE_TAG make -j2
      - run:
          name: Update nro-generator with the latest tag
          command: bash update_nro_generator.sh
      - run:
          name: Update docker-compose with the latest tag
          command: bash update_docker_compose.sh

  create-test-data:
    <<: *defaults
    environment:
      <<: *common_environment
      <<: *develop_environment
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: /home/circleci/run_bash_script_in_php_pod.sh ./generate-test-content.sh /tmp/workspace
      - store_artifacts:
          path: /tmp/workspace

workflow_definitions:
  develop_common: &develop_common
    context: org-global
    filters:
      branches:
        only: main

workflows:
  develop:
    jobs:
    - build:
        <<: *develop_common
    - deploy:
        <<: *develop_common
        requires:
          - build
    - create-test-data:
        <<: *develop_common
        requires:
          - deploy

  create-default-sql:
    jobs:
    - create-default-sql:
        context: org-global
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /v.*/
